1>	What command(s) do you run to create and enable the virtualenv?

To create the virtualenv:
virtualenv "$HOME/bdossp_sp16"

To enable the virtualenv:
source $HOME/bdossp_sp16/bin/activate



2>	python hello.py may not work if you run only with standard python libraries. What command(s) do you run to resolve the issue?

Install the flask package:
pip install flask



3>	If you ran the application successfully, you can see ‘Hello Big Data’ message on your web browser with the 15000 web port. However, it is not accessible from outside e.g. http://IP_ADDRESS:15000. It is because that there is no rule for the port in OpenStack Security Group. (We assume there is no firewall here). What nova command(s) do you need to create/add a security group for the port?

If "http://IP_ADDRESS:15000" (Test Case Example: "http://149.165.159.205:15009/") is not accessible from outside, do following steps.

Create the new security group:
nova secgroup-create mjaglan_global_http "mjaglan: allow Web traffic for 149.165.159.205:15000 and 149.165.159.205:15009 from anywhere on the Internet."
+--------------------------------------+---------------------+---------------------------------------------------------------------------------------------------------------+
| Id                                   | Name                | Description                                                                                                   |
+--------------------------------------+---------------------+---------------------------------------------------------------------------------------------------------------+
| e90adf3c-dc59-4bef-90d3-1f2f4a5c2ed2 | mjaglan_global_http | mjaglan: allow Web traffic for 149.165.159.205:15000 and 149.165.159.205:15009 from anywhere on the Internet. |
+--------------------------------------+---------------------+---------------------------------------------------------------------------------------------------------------+


Associating the above security group to my VM instance:
nova add-secgroup <SERVER ID> mjaglan_global_http
nova add-secgroup 3ec1701f-0947-44fc-a65f-e7501b009151 mjaglan_global_http


Add a new group rule:
nova secgroup-add-rule mjaglan_global_http tcp 15000 15000 0.0.0.0/0
+-------------+-----------+---------+-----------+--------------+
| IP Protocol | From Port | To Port | IP Range  | Source Group |
+-------------+-----------+---------+-----------+--------------+
| tcp         | 15000     | 15000   | 0.0.0.0/0 |              |
+-------------+-----------+---------+-----------+--------------+


Add another new group rule (for Test Case Example: "http://149.165.159.205:15009/"):
nova secgroup-add-rule mjaglan_global_http tcp 15009 15009 0.0.0.0/0
+-------------+-----------+---------+-----------+--------------+
| IP Protocol | From Port | To Port | IP Range  | Source Group |
+-------------+-----------+---------+-----------+--------------+
| tcp         | 15009     | 15009   | 0.0.0.0/0 |              |
+-------------+-----------+---------+-----------+--------------+



**********************************************************************************************
HOW DID I TEST IT? I added a new group rule:
nova secgroup-add-rule mjaglan_global_http tcp 15009 15009 0.0.0.0/0
+-------------+-----------+---------+-----------+--------------+
| IP Protocol | From Port | To Port | IP Range  | Source Group |
+-------------+-----------+---------+-----------+--------------+
| tcp         | 15009     | 15009   | 0.0.0.0/0 |              |
+-------------+-----------+---------+-----------+--------------+


Next, modify the hello.py file to run the server at different port (example: 15009). See the git diff below.
ubuntu@hw3-mjaglan:~/github.iu.edu/mjaglan$ git diff
diff --git a/challenge/flask/hello.py b/challenge/flask/hello.py
index ce45222..39c3a7c 100644
--- a/challenge/flask/hello.py
+++ b/challenge/flask/hello.py
@@ -6,4 +6,4 @@ def hello_world():
     return 'Hello Big Data!'

 if __name__ == '__main__':
-    app.run(host="0.0.0.0",port=15000)
+    app.run(host="0.0.0.0",port=15009)
ubuntu@hw3-mjaglan:~/github.iu.edu/mjaglan$



And then run follwing:
cd challenge/flask/hello.py
source $HOME/bdossp_sp16/bin/activate
python hello.py


Go to web browser and type "http://149.165.159.205:15009/" to see "Hello Big Data!" as the output.




4>	flask rule is provided in fg491 project. What nova command(s) do you need to see current rule(s) in the security group and to apply it to your VM?

Output all security groups:
nova secgroup-list

+--------------------------------------+---------------------+---------------------------------------------------------------------------------------------------------------+
| Id                                   | Name                | Description                                                                                                   |
+--------------------------------------+---------------------+---------------------------------------------------------------------------------------------------------------+
| d8c0d4f2-c585-45c0-a9c6-3671802d62ac | default             | Default security group                                                                                        |
| 65c45118-04eb-47ee-9ae2-1739decc7b38 | flask               | 15000                                                                                                         |
| 86496558-591d-4742-8605-21f1e4412f2f | flask-port          | for flask-python                                                                                              |
| 277c672a-2ea4-4f6a-85cd-a48bdd110473 | flask-svaradar      | Allow 1 flask only ip                                                                                         |
| e90adf3c-dc59-4bef-90d3-1f2f4a5c2ed2 | mjaglan_global_http | mjaglan: allow Web traffic for 149.165.159.205:15000 and 149.165.159.205:15009 from anywhere on the Internet. |
| 59cc41e4-da66-4109-86cb-82218a0fce2d | notebook            | 8888                                                                                                          |
| d453e426-e78e-4bc4-ace5-16a6b34bf27f | test_flask          |                                                                                                               |
| 1fa5e9e9-ca6b-48f8-8a51-fb1cb1d76420 | web ports           | 80, 443                                                                                                       |
+--------------------------------------+---------------------+---------------------------------------------------------------------------------------------------------------+


Now, see the details of 'flask' group:
nova secgroup-list-rules flask

+-------------+-----------+---------+-----------+--------------+
| IP Protocol | From Port | To Port | IP Range  | Source Group |
+-------------+-----------+---------+-----------+--------------+
| tcp         | 15000     | 15000   | 0.0.0.0/0 |              |
+-------------+-----------+---------+-----------+--------------+


Now, apply the above security group to my VM instance:
nova add-secgroup <SERVER ID> flask
nova add-secgroup 3ec1701f-0947-44fc-a65f-e7501b009151 flask

