FutureSystems Access

1>    Sign Up portal.futuresystems.org, if not exist. Provide your portal ID in your submission.
Portal ID: mjaglan		(3536)

2>    Join Class Project and provide a project number in your submission.
project number: FG-491		(https://portal.futuresystems.org/projects/491)

3>    Generate a new SSH key and register on the portal.futuresystems.org. Provide your key fingerprint in your submission.
Fingerprint: 	96:e7:27:a9:3c:0b:e3:fd:2f:4f:b9:d9:f5:bc:af:a8

4>    SSH into india.futuresystems.org with your registered key. Run the following command and attach the output messages (plain text) in your submission. (Most SSH client tools offer copy and paste option with a mouse from the screen):

    finger $USER

[mjaglan@i136 ~]$ finger mjaglan
Login: mjaglan                          Name: (null)
Directory: /N/u/mjaglan                 Shell: /bin/bash
On since Mon Feb  1 10:34 (EST) on pts/5 from 149-160-171-38.dhcp-bl.indiana.edu
Mail forwarded to mjaglan@umail.iu.edu
No mail.
No Plan.


	
GitHub
5>    Sign up github.com with your SSH key. Provide your github.com user name in your submission.
https://github.com/mjaglan/

6>    Create a ‘I590-Projects-BigData-Software’ repository on your account. Create ‘hw2’ branch. Provide a clone URL of ‘hw2’ branch in your submission.
clone URL of ‘hw2’ branch:  git clone -b hw2 --single-branch git://github.com/mjaglan/I590-Projects-BigData-Software.git

7>    This is a question for you to answer with appropriate git commands to satisfy the following descriptions:

    Albert has some Python code files that he was developing on his local machine but he wanted to use github.com to trace changes and share his work with others. He already created a new repository named ‘BigData’ on his github account. So he made a copy of the repository on his machine and there was nothing in the repo. He added a ‘README.rst’ file to describe his repository first. To make sure his description looks okay he pushed his update to github and opened a webpage to check. When he get access to his repository on github.com via a web browser, he found that Contact Info was missing so he added the info in the README.rst file online using a web browser and his description showed with the new Contact Info. He returned to his local repository and updated his repository because he wanted to sync the changes that he made on github.com. His next task was adding new_feature.py and bug.py in a separate branch, not in master because he thought these two files are still in progress with different purposes. He simply created ‘next’ and ‘error’ branches in his current repository and added the two files accordingly. his all tasks are applied to github.com.

	List git commands that Albert used in his work above in your submission.

git clone git@github.iu.edu:mjaglan/BigData.git
touch README.rst
<<now edit the file>>
git add README.rst 
git commit -m "rst file"
git push origin master 
<<edit online using a web browser>>
git pull
git checkout -b next
touch new_feature.py
git add new_feature.py
git commit -m "new_feature.py file added"
git push origin next 
git checkout -b error
touch bug.py
git add bug.py
git commit -m "bug.py file added"
git push origin error 
exit

	
Python
8>    Write a python program called fizzbuzz.py that accepts an integer n from the command line. Pass this integer to a function called fizzbuzz. The fizzbuzz function should then iterate from 1 to n. If the ith number is a multiple of two, print “fizz”, if a multiple of three print “buzz”, if a multiple of both print “fizzbuzz”, else print the value.

commit URL: https://github.com/mjaglan/I590-Projects-BigData-Software/commit/548ecf80ded4fc6fecda6acbb0b96d07074014aa


9>    Create a ‘hw2’ branch on your github repository ‘I590-Projects-BigData-Software’ and add fizzbuzz.py to the branch. Provide a clone URL for the branch in your submission.

clone URL of ‘hw2’ branch:  git clone -b hw2 --single-branch git://github.com/mjaglan/I590-Projects-BigData-Software.git

